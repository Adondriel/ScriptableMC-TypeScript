import { ResultSet } from '../../java/sql/ResultSet.js';
import { Connection } from '../../java/sql/Connection.js';
import { RowIdLifetime } from '../../java/sql/RowIdLifetime.js';
export interface DatabaseMetaData {
    getAttributes(arg0: string, arg1: string, arg2: string, arg3: string): ResultSet;
    isReadOnly(): boolean;
    getURL(): string;
    getColumns(arg0: string, arg1: string, arg2: string, arg3: string): ResultSet;
    getConnection(): Connection;
    supportsDataDefinitionAndDataManipulationTransactions(): boolean;
    getResultSetHoldability(): number;
    storesLowerCaseIdentifiers(): boolean;
    supportsMinimumSQLGrammar(): boolean;
    nullPlusNonNullIsNull(): boolean;
    allTablesAreSelectable(): boolean;
    supportsAlterTableWithDropColumn(): boolean;
    supportsANSI92EntryLevelSQL(): boolean;
    nullsAreSortedAtStart(): boolean;
    getDatabaseProductVersion(): string;
    getDriverMajorVersion(): number;
    allProceduresAreCallable(): boolean;
    getIdentifierQuoteString(): string;
    supportsTableCorrelationNames(): boolean;
    supportsColumnAliasing(): boolean;
    getDatabaseProductName(): string;
    supportsGroupByUnrelated(): boolean;
    getCatalogSeparator(): string;
    supportsSchemasInDataManipulation(): boolean;
    supportsSchemasInProcedureCalls(): boolean;
    getExtraNameCharacters(): string;
    usesLocalFilePerTable(): boolean;
    getDriverMinorVersion(): number;
    storesMixedCaseQuotedIdentifiers(): boolean;
    getNumericFunctions(): string;
    getTimeDateFunctions(): string;
    getSearchStringEscape(): string;
    supportsOrderByUnrelated(): boolean;
    supportsLikeEscapeClause(): boolean;
    nullsAreSortedAtEnd(): boolean;
    storesLowerCaseQuotedIdentifiers(): boolean;
    storesUpperCaseIdentifiers(): boolean;
    supportsMultipleResultSets(): boolean;
    supportsCoreSQLGrammar(): boolean;
    supportsExtendedSQLGrammar(): boolean;
    supportsANSI92IntermediateSQL(): boolean;
    storesMixedCaseIdentifiers(): boolean;
    supportsAlterTableWithAddColumn(): boolean;
    supportsExpressionsInOrderBy(): boolean;
    supportsGroupByBeyondSelect(): boolean;
    supportsNonNullableColumns(): boolean;
    supportsMixedCaseQuotedIdentifiers(): boolean;
    supportsFullOuterJoins(): boolean;
    supportsMixedCaseIdentifiers(): boolean;
    supportsMultipleTransactions(): boolean;
    storesUpperCaseQuotedIdentifiers(): boolean;
    supportsANSI92FullSQL(): boolean;
    supportsLimitedOuterJoins(): boolean;
    getMaxColumnsInSelect(): number;
    getMaxCursorNameLength(): number;
    supportsCatalogsInTableDefinitions(): boolean;
    supportsCorrelatedSubqueries(): boolean;
    supportsSubqueriesInExists(): boolean;
    supportsSubqueriesInQuantifieds(): boolean;
    getMaxTablesInSelect(): number;
    getMaxProcedureNameLength(): number;
    getMaxBinaryLiteralLength(): number;
    getProcedureColumns(arg0: string, arg1: string, arg2: string, arg3: string): ResultSet;
    supportsOpenCursorsAcrossRollback(): boolean;
    getColumnPrivileges(arg0: string, arg1: string, arg2: string, arg3: string): ResultSet;
    supportsCatalogsInIndexDefinitions(): boolean;
    supportsSubqueriesInComparisons(): boolean;
    supportsResultSetConcurrency(arg0: number, arg1: number): boolean;
    supportsStatementPooling(): boolean;
    getMaxTableNameLength(): number;
    supportsOpenCursorsAcrossCommit(): boolean;
    supportsCatalogsInProcedureCalls(): boolean;
    getMaxStatementLength(): number;
    getMaxUserNameLength(): number;
    othersInsertsAreVisible(arg0: number): boolean;
    supportsGetGeneratedKeys(): boolean;
    getMaxColumnsInGroupBy(): number;
    getMaxCharLiteralLength(): number;
    supportsMultipleOpenResults(): boolean;
    getMaxSchemaNameLength(): number;
    getBestRowIdentifier(arg0: string, arg1: string, arg2: string, arg3: number, arg4: boolean): ResultSet;
    supportsBatchUpdates(): boolean;
    getClientInfoProperties(): ResultSet;
    getMaxLogicalLobSize(): number;
    supportsSelectForUpdate(): boolean;
    supportsSchemasInTableDefinitions(): boolean;
    supportsCatalogsInDataManipulation(): boolean;
    getMaxCatalogNameLength(): number;
    supportsOpenStatementsAcrossCommit(): boolean;
    supportsTransactions(): boolean;
    supportsTransactionIsolationLevel(arg0: number): boolean;
    getMaxColumnsInOrderBy(): number;
    ownUpdatesAreVisible(arg0: number): boolean;
    getMaxColumnNameLength(): number;
    supportsSubqueriesInIns(): boolean;
    supportsStoredProcedures(): boolean;
    ownInsertsAreVisible(arg0: number): boolean;
    othersDeletesAreVisible(arg0: number): boolean;
    supportsResultSetHoldability(arg0: number): boolean;
    supportsPositionedDelete(): boolean;
    getMaxColumnsInTable(): number;
    supportsPositionedUpdate(): boolean;
    doesMaxRowSizeIncludeBlobs(): boolean;
    supportsSchemasInIndexDefinitions(): boolean;
    supportsNamedParameters(): boolean;
    getJDBCMajorVersion(): number;
    getDatabaseMinorVersion(): number;
    othersUpdatesAreVisible(arg0: number): boolean;
    getDefaultTransactionIsolation(): number;
    ownDeletesAreVisible(arg0: number): boolean;
    supportsResultSetType(arg0: number): boolean;
    getMaxColumnsInIndex(): number;
    getDatabaseMajorVersion(): number;
    getJDBCMinorVersion(): number;
    generatedKeyAlwaysReturned(): boolean;
    nullsAreSortedHigh(): boolean;
    nullsAreSortedLow(): boolean;
    getSQLKeywords(): string;
    getStringFunctions(): string;
    getSystemFunctions(): string;
    supportsConvert(arg0: number, arg1: number): boolean;
    supportsConvert(): boolean;
    supportsOuterJoins(): boolean;
    getDriverName(): string;
    getDriverVersion(): string;
    usesLocalFiles(): boolean;
    getUserName(): string;
    supportsGroupBy(): boolean;
    getSchemaTerm(): string;
    getCatalogTerm(): string;
    isCatalogAtStart(): boolean;
    supportsUnion(): boolean;
    getProcedureTerm(): string;
    supportsUnionAll(): boolean;
    getMaxConnections(): number;
    getMaxIndexLength(): number;
    getMaxRowSize(): number;
    supportsRefCursors(): boolean;
    locatorsUpdateCopy(): boolean;
    getMaxStatements(): number;
    getIndexInfo(arg0: string, arg1: string, arg2: string, arg3: boolean, arg4: boolean): ResultSet;
    getTableTypes(): ResultSet;
    getSuperTypes(arg0: string, arg1: string, arg2: string): ResultSet;
    getRowIdLifetime(): RowIdLifetime;
    getTables(arg0: string, arg1: string, arg2: string, arg3: Array<string>): ResultSet;
    getTablePrivileges(arg0: string, arg1: string, arg2: string): ResultSet;
    deletesAreDetected(arg0: number): boolean;
    getPrimaryKeys(arg0: string, arg1: string, arg2: string): ResultSet;
    getVersionColumns(arg0: string, arg1: string, arg2: string): ResultSet;
    getUDTs(arg0: string, arg1: string, arg2: string, arg3: Array<number>): ResultSet;
    getSchemas(): ResultSet;
    getSchemas(arg0: string, arg1: string): ResultSet;
    getSuperTables(arg0: string, arg1: string, arg2: string): ResultSet;
    getFunctionColumns(arg0: string, arg1: string, arg2: string, arg3: string): ResultSet;
    getFunctions(arg0: string, arg1: string, arg2: string): ResultSet;
    getProcedures(arg0: string, arg1: string, arg2: string): ResultSet;
    getPseudoColumns(arg0: string, arg1: string, arg2: string, arg3: string): ResultSet;
    getExportedKeys(arg0: string, arg1: string, arg2: string): ResultSet;
    getCrossReference(arg0: string, arg1: string, arg2: string, arg3: string, arg4: string, arg5: string): ResultSet;
    getSQLStateType(): number;
    supportsSavepoints(): boolean;
    getImportedKeys(arg0: string, arg1: string, arg2: string): ResultSet;
    supportsSharding(): boolean;
    insertsAreDetected(arg0: number): boolean;
    getCatalogs(): ResultSet;
    getTypeInfo(): ResultSet;
    updatesAreDetected(arg0: number): boolean;
    dataDefinitionCausesTransactionCommit(): boolean;
    supportsIntegrityEnhancementFacility(): boolean;
    supportsDataManipulationTransactionsOnly(): boolean;
    supportsDifferentTableCorrelationNames(): boolean;
    supportsStoredFunctionsUsingCallSyntax(): boolean;
    supportsOpenStatementsAcrossRollback(): boolean;
    supportsCatalogsInPrivilegeDefinitions(): boolean;
    supportsSchemasInPrivilegeDefinitions(): boolean;
    dataDefinitionIgnoredInTransactions(): boolean;
    autoCommitFailureClosesAllResultSets(): boolean;
    unwrap(arg0: any): any;
    isWrapperFor(arg0: any): boolean;
}
export declare class DatabaseMetaData {
    static get $javaClass(): any;
    static get procedureResultUnknown(): number;
    static get procedureNoResult(): number;
    static get procedureReturnsResult(): number;
    static get procedureColumnUnknown(): number;
    static get procedureColumnIn(): number;
    static get procedureColumnInOut(): number;
    static get procedureColumnOut(): number;
    static get procedureColumnReturn(): number;
    static get procedureColumnResult(): number;
    static get procedureNoNulls(): number;
    static get procedureNullable(): number;
    static get procedureNullableUnknown(): number;
    static get columnNoNulls(): number;
    static get columnNullable(): number;
    static get columnNullableUnknown(): number;
    static get bestRowTemporary(): number;
    static get bestRowTransaction(): number;
    static get bestRowSession(): number;
    static get bestRowUnknown(): number;
    static get bestRowNotPseudo(): number;
    static get bestRowPseudo(): number;
    static get versionColumnUnknown(): number;
    static get versionColumnNotPseudo(): number;
    static get versionColumnPseudo(): number;
    static get importedKeyCascade(): number;
    static get importedKeyRestrict(): number;
    static get importedKeySetNull(): number;
    static get importedKeyNoAction(): number;
    static get importedKeySetDefault(): number;
    static get importedKeyInitiallyDeferred(): number;
    static get importedKeyInitiallyImmediate(): number;
    static get importedKeyNotDeferrable(): number;
    static get typeNoNulls(): number;
    static get typeNullable(): number;
    static get typeNullableUnknown(): number;
    static get typePredNone(): number;
    static get typePredChar(): number;
    static get typePredBasic(): number;
    static get typeSearchable(): number;
    static get tableIndexStatistic(): number;
    static get tableIndexClustered(): number;
    static get tableIndexHashed(): number;
    static get tableIndexOther(): number;
    static get attributeNoNulls(): number;
    static get attributeNullable(): number;
    static get attributeNullableUnknown(): number;
    static get sqlStateXOpen(): number;
    static get sqlStateSQL(): number;
    static get sqlStateSQL99(): number;
    static get functionColumnUnknown(): number;
    static get functionColumnIn(): number;
    static get functionColumnInOut(): number;
    static get functionColumnOut(): number;
    static get functionReturn(): number;
    static get functionColumnResult(): number;
    static get functionNoNulls(): number;
    static get functionNullable(): number;
    static get functionNullableUnknown(): number;
    static get functionResultUnknown(): number;
    static get functionNoTable(): number;
    static get functionReturnsTable(): number;
}

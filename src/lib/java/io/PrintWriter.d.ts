import File from '../../java/io/File.js';
import OutputStream from '../../java/io/OutputStream.js';
import Writer from '../../java/io/Writer.js';
export default interface PrintWriter extends Writer {
    println(x: Array<string>): void;
    println(x: number): void;
    println(x: number): void;
    println(x: string): void;
    println(x: any): void;
    println(x: number): void;
    println(x: string): void;
    println(x: boolean): void;
    println(): void;
    println(x: number): void;
    append(csq: any, start: number, end: number): PrintWriter;
    append(csq: any, start: number, end: number): Writer;
    append(csq: any, start: number, end: number): any;
    append(csq: any): PrintWriter;
    append(csq: any): any;
    append(csq: any): Writer;
    append(c: string): any;
    append(c: string): Writer;
    append(c: string): PrintWriter;
    format(l: any, format: string, args: Array<any>): PrintWriter;
    format(format: string, args: Array<any>): PrintWriter;
    write(c: number): void;
    write(s: string, off: number, len: number): void;
    write(buf: Array<string>): void;
    write(buf: Array<string>, off: number, len: number): void;
    write(s: string): void;
    print(f: number): void;
    print(l: number): void;
    print(i: number): void;
    print(c: string): void;
    print(b: boolean): void;
    print(obj: any): void;
    print(s: string): void;
    print(s: Array<string>): void;
    print(d: number): void;
    flush(): void;
    close(): void;
    checkError(): boolean;
    printf(l: any, format: string, args: Array<any>): PrintWriter;
    printf(format: string, args: Array<any>): PrintWriter;
}
export default class PrintWriter {
    static get $javaClass(): any;
    constructor(fileName: string);
    constructor(fileName: string, csn: string);
    constructor(fileName: string, charset: any);
    constructor(file: File);
    constructor(file: File, csn: string);
    constructor(file: File, charset: any);
    constructor(out: Writer);
    constructor(out: Writer, autoFlush: boolean);
    constructor(out: OutputStream, autoFlush: boolean, charset: any);
    constructor(out: OutputStream, autoFlush: boolean);
    constructor(out: OutputStream);
    static nullWriter(): Writer;
}

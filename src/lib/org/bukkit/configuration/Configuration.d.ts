import Color from '../../../org/bukkit/Color.js';
import ConfigurationOptions from '../../../org/bukkit/configuration/ConfigurationOptions.js';
import ConfigurationSection from '../../../org/bukkit/configuration/ConfigurationSection.js';
import ConfigurationSerializable from '../../../org/bukkit/configuration/serialization/ConfigurationSerializable.js';
import ItemStack from '../../../org/bukkit/inventory/ItemStack.js';
import Location from '../../../org/bukkit/Location.js';
import OfflinePlayer from '../../../org/bukkit/OfflinePlayer.js';
import Vector from '../../../org/bukkit/util/Vector.js';
export default interface Configuration extends ConfigurationSection {
    options(): ConfigurationOptions;
    addDefault(arg0: string, arg1: any): void;
    addDefaults(arg0: Configuration): void;
    addDefaults(arg0: any): void;
    getDefaults(): Configuration;
    setDefaults(arg0: Configuration): void;
    get(arg0: string, arg1: any): any;
    get(arg0: string): any;
    getObject(arg0: string, arg1: any, arg2: any): any;
    getObject(arg0: string, arg1: any): any;
    getBoolean(arg0: string, arg1: boolean): boolean;
    getBoolean(arg0: string): boolean;
    getInt(arg0: string, arg1: number): number;
    getInt(arg0: string): number;
    getLong(arg0: string, arg1: number): number;
    getLong(arg0: string): number;
    getDouble(arg0: string): number;
    getDouble(arg0: string, arg1: number): number;
    getName(): string;
    contains(arg0: string): boolean;
    contains(arg0: string, arg1: boolean): boolean;
    getParent(): ConfigurationSection;
    set(arg0: string, arg1: any): void;
    getLocation(arg0: string): Location;
    getLocation(arg0: string, arg1: Location): Location;
    isSet(arg0: string): boolean;
    getRoot(): Configuration;
    getKeys(arg0: boolean): any;
    getString(arg0: string): string;
    getString(arg0: string, arg1: string): string;
    getOfflinePlayer(arg0: string): OfflinePlayer;
    getOfflinePlayer(arg0: string, arg1: OfflinePlayer): OfflinePlayer;
    getBooleanList(arg0: string): Array<boolean>;
    getLongList(arg0: string): Array<number>;
    isOfflinePlayer(arg0: string): boolean;
    getIntegerList(arg0: string): Array<any>;
    getFloatList(arg0: string): Array<number>;
    getDoubleList(arg0: string): Array<number>;
    isVector(arg0: string): boolean;
    getValues(arg0: boolean): any;
    getMapList(arg0: string): Array<any>;
    isItemStack(arg0: string): boolean;
    isInt(arg0: string): boolean;
    isDouble(arg0: string): boolean;
    getCharacterList(arg0: string): Array<any>;
    getCurrentPath(): string;
    isList(arg0: string): boolean;
    getByteList(arg0: string): Array<number>;
    getList(arg0: string): Array<any>;
    getList(arg0: string, arg1: Array<any>): Array<any>;
    getColor(arg0: string, arg1: Color): Color;
    getColor(arg0: string): Color;
    getShortList(arg0: string): Array<number>;
    isColor(arg0: string): boolean;
    getDefaultSection(): ConfigurationSection;
    getSerializable(arg0: string, arg1: any): ConfigurationSerializable;
    getSerializable(arg0: string, arg1: any, arg2: ConfigurationSerializable): ConfigurationSerializable;
    isLocation(arg0: string): boolean;
    isLong(arg0: string): boolean;
    getStringList(arg0: string): Array<string>;
    createSection(arg0: string): ConfigurationSection;
    createSection(arg0: string, arg1: any): ConfigurationSection;
    getVector(arg0: string, arg1: Vector): Vector;
    getVector(arg0: string): Vector;
    getItemStack(arg0: string): ItemStack;
    getItemStack(arg0: string, arg1: ItemStack): ItemStack;
    isString(arg0: string): boolean;
    isBoolean(arg0: string): boolean;
    getConfigurationSection(arg0: string): ConfigurationSection;
    isConfigurationSection(arg0: string): boolean;
}
export default class Configuration {
    static get $javaClass(): any;
}

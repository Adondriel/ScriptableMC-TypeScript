import Plugin from '../../../org/bukkit/plugin/Plugin.js';
export default interface PluginLogger {
    log(logRecord: any): void;
    getResourceBundle(): any;
    getResourceBundleName(): string;
    setFilter(arg0: any): void;
    getFilter(): any;
    logp(arg0: any, arg1: string, arg2: string, arg3: string, arg4: Array<any>): void;
    logp(arg0: any, arg1: string, arg2: string, arg3: string, arg4: any): void;
    logp(arg0: any, arg1: string, arg2: string, arg3: any, arg4: any): void;
    logp(arg0: any, arg1: string, arg2: string, arg3: string, arg4: any): void;
    logp(arg0: any, arg1: string, arg2: string, arg3: string): void;
    logp(arg0: any, arg1: string, arg2: string, arg3: any): void;
    logrb(arg0: any, arg1: string, arg2: string, arg3: any, arg4: string, arg5: Array<any>): void;
    logrb(arg0: any, arg1: string, arg2: string, arg3: any, arg4: string, arg5: any): void;
    logrb(arg0: any, arg1: string, arg2: string, arg3: string, arg4: string, arg5: any): void;
    logrb(arg0: any, arg1: string, arg2: string, arg3: string, arg4: string, arg5: Array<any>): void;
    logrb(arg0: any, arg1: string, arg2: string, arg3: string, arg4: string, arg5: any): void;
    logrb(arg0: any, arg1: string, arg2: string, arg3: string, arg4: string): void;
    entering(arg0: string, arg1: string, arg2: any): void;
    entering(arg0: string, arg1: string): void;
    entering(arg0: string, arg1: string, arg2: Array<any>): void;
    exiting(arg0: string, arg1: string): void;
    exiting(arg0: string, arg1: string, arg2: any): void;
    throwing(arg0: string, arg1: string, arg2: any): void;
    severe(arg0: string): void;
    severe(arg0: any): void;
    config(arg0: any): void;
    config(arg0: string): void;
    fine(arg0: string): void;
    fine(arg0: any): void;
    finer(arg0: string): void;
    finer(arg0: any): void;
    finest(arg0: string): void;
    finest(arg0: any): void;
    isLoggable(arg0: any): boolean;
    addHandler(arg0: any): void;
    removeHandler(arg0: any): void;
    getHandlers(): Array<any>;
    setUseParentHandlers(arg0: boolean): void;
    getUseParentHandlers(): boolean;
    setResourceBundle(arg0: any): void;
    warning(arg0: any): void;
    warning(arg0: string): void;
    info(arg0: any): void;
    info(arg0: string): void;
    getLevel(): any;
    setLevel(arg0: any): void;
    log(arg0: any, arg1: any, arg2: any): void;
    log(arg0: any, arg1: string, arg2: any): void;
    log(arg0: any, arg1: string, arg2: Array<any>): void;
    log(arg0: any, arg1: string, arg2: any): void;
    log(arg0: any, arg1: any): void;
    log(arg0: any, arg1: string): void;
    getName(): string;
    getParent(): any;
    setParent(arg0: any): void;
}
export default class PluginLogger {
    static get $javaClass(): any;
    constructor(context: Plugin);
    static get GLOBAL_LOGGER_NAME(): string;
    static get global(): any;
    static getGlobal(): any;
    static getAnonymousLogger(arg0: string): any;
    static getAnonymousLogger(): any;
    static getLogger(arg0: string, arg1: string): any;
    static getLogger(arg0: string): any;
}
